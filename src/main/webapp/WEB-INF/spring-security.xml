<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
        <constructor-arg value="wb8P*gLoPqBCmWpgMzoW8wk]" />
    </bean>

    <bean class="com.freshcard.backend.security.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
        <constructor-arg ref="userDAO" />
    </bean>

    <bean id="unauthorizedEntryPoint" class="com.freshcard.backend.security.UnauthorizedEndpoint" />

    <security:http
            realm="Freshcard API documentation"
            pattern="/swagger-ui/**"
            auto-config="true"
            authentication-manager-ref="basicAuthenticationManager">
        <security:intercept-url pattern="/**" access="ROLE_API_DOC_USER"/>
        <security:http-basic/>
        <security:port-mappings>
            <security:port-mapping http="8088" https="8443"/>
            <security:port-mapping http="80" https="443"/>
        </security:port-mappings>
    </security:http>

    <security:http
            realm="Freshcard backend API"
            use-expressions="true"
            auto-config="false"
            create-session="stateless"
            entry-point-ref="unauthorizedEntryPoint"
            authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
        <security:intercept-url pattern="/api/v1/users/authenticate" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/authenticateFromJSON" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/authenticateViaOAuth" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/signUp" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/signUpExistingUser" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/findByHashCode" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/checkByUsername" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/checkIfUserExists" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/getVCardsByHashCode/**" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/confirmAccount/**" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/changePassword/**" access="permitAll" />
        <security:intercept-url pattern="/api/v1/users/sendPasswordResetLink/**" access="permitAll" />
        <security:intercept-url pattern="/api/v1/contacts/findByHashCode" access="permitAll" />
        <security:intercept-url pattern="/api/v1/contacts/getVCardsByHashCode/**" access="permitAll" />
        <security:intercept-url pattern="/api/v1/contacts/addMutualConnection" access="permitAll" />
        <security:intercept-url pattern="/api/v1/contacts/addMutualConnectionWithTemporaryUser" access="permitAll" />
        <security:intercept-url pattern="/api/v1/oAuth/**" access="permitAll" />
        <security:intercept-url method="GET" pattern="/api/v1/contacts/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="PUT" pattern="/api/v1/contacts/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="POST" pattern="/api/v1/contacts/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="DELETE" pattern="/api/v1/contacts/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="GET" pattern="/api/v1/organizations/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="PUT" pattern="/api/v1/organizations/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="POST" pattern="/api/v1/organizations/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="DELETE" pattern="/api/v1/organizations/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="GET" pattern="/api/v1/users/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="PUT" pattern="/api/v1/users/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="POST" pattern="/api/v1/users/**" access="hasRole('ROLE_USER')" />
        <security:intercept-url method="DELETE" pattern="/api/v1/users/**" access="hasRole('ROLE_USER')" />
        <security:http-basic/>
        <security:port-mappings>
            <security:port-mapping http="8088" https="8443"/>
            <security:port-mapping http="80" https="443"/>
        </security:port-mappings>
    </security:http>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="userDAO">
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <security:authentication-manager id="oAuthAuthenticationManager">
        <security:authentication-provider user-service-ref="oAuthUserDAO"/>
    </security:authentication-manager>

    <security:authentication-manager id="basicAuthenticationManager">
        <security:authentication-provider>
            <security:user-service>
                <security:user name="FreshcardAPI" password="ffi/(9o2" authorities="ROLE_API_DOC_USER" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>
